<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="fb_Station_LinkedListCtrl" Id="{f01f0db4-80d5-4efa-bc0e-a8532a3b5f97}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK fb_Station_LinkedListCtrl IMPLEMENTS I_Station_LinkedList
VAR
  _LastNodeAdded,
  _LastNodeRemoved  : ST_STATION_LIST_RESULT;

	_nCount           : UDINT;
  _nFree            : UDINT;

	_stList           : ARRAY[0..MAX_LIST_NODES] OF ST_STATION_MOVER_DATA;
	_stNodes          : ARRAY[0..MAX_LIST_NODES] OF T_LinkedListEntry;

	_fbList           : Tc2_Utilities.FB_LinkedListCtrl;
	_hList            : Tc2_Utilities.T_HLINKEDLIST;

	_stRef            : POINTER TO ST_STATION_MOVER_DATA;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="AddHeadValue" Id="{dacf8335-e195-40f4-965e-7898f564145d}">
      <Declaration><![CDATA[METHOD AddHeadValue : ST_STATION_LIST_RESULT
VAR_INPUT
  stData        : ST_STATION_MOVER_DATA;
END_VAR
VAR
  _nIdxNode     : ULINT; 
	_pPosGet      : POINTER TO T_LinkedListEntry;
  _stRes        : ST_STATION_LIST_RESULT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
// add empty node
_fbList.A_AddHeadValue( hList     := _hList, 
                        putValue  := 16#0, 
                        getPosPtr => _pPosGet);

IF NOT _fbList.bOk 
THEN
  _stRes.wState.0       := TRUE;
ELSE
  // Get array index of new node
	_fbList.A_GetIndexAtPosPtr( hList       := _hList, 
                              putPosPtr   := _pPosGet, 
                              getValue    => _nIdxNode);

	IF NOT _fbList.bOk 
  THEN
    _stRes.wState.1     := TRUE;
  ELSE
    // write data to new node index
		_stRef 	            := ADR( _stList[_nIdxNode] );
		_stRef^ 	          := stData;

		_fbList.A_SetValueAtPosPtr( hList     := _hList, 
                                putPosPtr := _pPosGet, 
                                putValue  := _stRef);

		IF NOT _fbList.bOk 
    THEN
      _stRes.wState.2   := TRUE;
    ELSE
      _stRes.nIndex     := _nIdxNode;
			_stRes.stData     := stData;
      _LastNodeAdded    := _stRes;
		END_IF
	END_IF
END_IF

AddHeadValue := _stRes;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddTailValue" Id="{fc6a0a7f-f3d7-40bb-8cbf-5d716e2fd4c6}">
      <Declaration><![CDATA[METHOD AddTailValue : ST_STATION_LIST_RESULT
VAR_INPUT
  stData        : ST_STATION_MOVER_DATA;
END_VAR
VAR
  _nIdxNode     : ULINT; 
	_pPosGet      : POINTER TO T_LinkedListEntry;
  _stRes        : ST_STATION_LIST_RESULT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
// add empty node
_fbList.A_AddTailValue( hList       := _hList, 
                        putValue    := 16#0, 
                        getPosPtr   => _pPosGet);


IF NOT _fbList.bOk 
THEN
  _stRes.wState.0 := TRUE;
ELSE
  // Get array index of new node
	_fbList.A_GetIndexAtPosPtr( hList       := _hList, 
                              putPosPtr   := _pPosGet, 
                              getValue    => _nIdxNode);

	IF NOT _fbList.bOk 
  THEN
    _stRes.wState.1     := TRUE;
  ELSE
    // write data to new node index
		_stRef 	            := ADR( _stList[_nIdxNode] );
		_stRef^ 	          := stData;

		_fbList.A_SetValueAtPosPtr( hList     := _hList, 
                                putPosPtr := _pPosGet, 
                                putValue  := _stRef);

		IF NOT _fbList.bOk 
    THEN
      _stRes.wState.2   := TRUE;
    ELSE
      _stRes.nIndex     := _nIdxNode;
			_stRes.stData     := stData;
      _LastNodeAdded    := _stRes;
		END_IF
	END_IF
END_IF

AddTailValue := _stRes;
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Count" Id="{b519167c-e84b-4b4f-81ec-031dd682ef5b}">
      <Declaration><![CDATA[PROPERTY Count : UDINT]]></Declaration>
      <Get Name="Get" Id="{eb31e2ef-23bc-4dba-b1b7-814df3cff826}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Count := _nCount := _hList.nCount;
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Data" Id="{876b4791-0fc6-425c-b5f8-389ba4c57541}">
      <Declaration><![CDATA[PROPERTY Data : ARRAY[0..MAX_LIST_NODES] OF ST_STATION_MOVER_DATA]]></Declaration>
      <Get Name="Get" Id="{0bfbe2e9-20ca-4718-91b7-a82533aef391}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Data := _stList;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Free" Id="{a07533ce-084a-4f80-85c4-f0df25b0adb1}">
      <Declaration><![CDATA[PROPERTY Free : UDINT]]></Declaration>
      <Get Name="Get" Id="{f8d4dfc9-1cc8-45d8-8c9b-6c822c2f58ca}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Free := _nFree := _hList.nFree;
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="GetHead" Id="{de72de40-01c2-4c26-aabf-0a7bf1751087}">
      <Declaration><![CDATA[METHOD GetHead : ST_STATION_LIST_RESULT
VAR_INPUT
END_VAR
VAR
	_pPosGet      : POINTER TO T_LinkedListEntry;
  _pData        : POINTER TO ST_STATION_MOVER_DATA;
  _stRes        : ST_STATION_LIST_RESULT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
_fbList.A_GetHead(hList      := _hList,
                  getValue   => _pData,
                  getPosPtr  => _pPosGet);

IF NOT _fbList.bOk
THEN
  _stRes.wState.0 := TRUE;
ELSE
  _stRes.stData := _pData^;
END_IF

GetHead := _stRes;

]]></ST>
      </Implementation>
    </Method>
    <Method Name="InitList" Id="{177cbf3b-9097-415a-a37a-9ff40ae42c86}">
      <Declaration><![CDATA[METHOD InitList : BOOL
VAR
  _bOk : Bool;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF Tc2_Utilities.F_CreateLinkedListHnd(ADR(_stNodes), SIZEOF(_stNodes), _hList)
THEN
  _fbList.A_Reset(hList := _hList, bOk => _bOk);
  memset(ADR(_stList), 0, SIZEOF(_stList));
  _nCount   := 0;
  InitList  := TRUE; //_bOk;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Nodes" Id="{4b1c71a6-f6ed-4b43-b29e-54dda159e2d8}">
      <Declaration><![CDATA[PROPERTY Nodes : ARRAY[0..MAX_LIST_NODES] OF T_LinkedListEntry]]></Declaration>
      <Get Name="Get" Id="{829f9d20-32a4-4c74-9a3e-0c4aeff09d55}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Nodes := _stNodes;
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="RemoveHeadValue" Id="{c9de05c0-b875-489a-a264-9b6b9d8d71fd}">
      <Declaration><![CDATA[METHOD RemoveHeadValue : ST_STATION_LIST_RESULT
VAR_INPUT
END_VAR
VAR
	_pPosGet      : POINTER TO T_LinkedListEntry;
  _pData        : POINTER TO ST_STATION_MOVER_DATA;
  _stRes        : ST_STATION_LIST_RESULT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
_fbList.A_RemoveHeadValue(hList       := _hList, 
                          getValue    => _pData, 
                          getPosPtr   => _pPosGet);

IF NOT _fbList.bOk 
THEN
  _stRes.wState.0 := TRUE;
ELSE
	_stRes.stData     := _pData^;
  _LastNodeRemoved  := _stRes;
END_IF
RemoveHeadValue := _stRes;
]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="fb_Station_LinkedListCtrl">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="fb_Station_LinkedListCtrl.AddHeadValue">
      <LineId Id="32" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="28" Count="1" />
      <LineId Id="31" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="33" Count="2" />
      <LineId Id="42" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="38" Count="1" />
      <LineId Id="57" Count="0" />
      <LineId Id="16" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="45" Count="0" />
      <LineId Id="44" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="17" Count="3" />
      <LineId Id="47" Count="1" />
      <LineId Id="50" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="51" Count="0" />
      <LineId Id="53" Count="0" />
      <LineId Id="52" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="23" Count="2" />
      <LineId Id="36" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="fb_Station_LinkedListCtrl.AddTailValue">
      <LineId Id="29" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="30" Count="2" />
      <LineId Id="28" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="46" Count="25" />
      <LineId Id="25" Count="0" />
      <LineId Id="43" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="fb_Station_LinkedListCtrl.Count.Get">
      <LineId Id="2" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="fb_Station_LinkedListCtrl.Data.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="fb_Station_LinkedListCtrl.Free.Get">
      <LineId Id="2" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="fb_Station_LinkedListCtrl.GetHead">
      <LineId Id="12" Count="2" />
      <LineId Id="16" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="19" Count="2" />
      <LineId Id="23" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="fb_Station_LinkedListCtrl.InitList">
      <LineId Id="6" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="8" Count="1" />
      <LineId Id="19" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="fb_Station_LinkedListCtrl.Nodes.Get">
      <LineId Id="2" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="fb_Station_LinkedListCtrl.RemoveHeadValue">
      <LineId Id="14" Count="0" />
      <LineId Id="16" Count="0" />
      <LineId Id="22" Count="2" />
      <LineId Id="17" Count="0" />
      <LineId Id="25" Count="2" />
      <LineId Id="18" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="30" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>