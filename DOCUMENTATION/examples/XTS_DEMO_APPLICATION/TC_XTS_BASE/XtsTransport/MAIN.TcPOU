<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4026.11">
  <POU Name="MAIN" Id="{f2e9720a-bda2-4399-8c7d-d9b6e11179c8}" SpecialFunc="None">
    <Declaration><![CDATA[//---------------------------------------------------------------------------------------------------------------
//
//  HAUD 2024.03.18
//
//  - XTS_TRANSPORT_LAYER
//  - transport layer members:
//    - CaGroup
//      - access to Group functions
//
//    - Mover
//      - access to MC and CA motion functions
//
//    - Xpu (ProcessingUnit)
//      - access to TcCOM Objects in Environment
//
//    - Transport Control Unit
//      - coordinates members to get XTS in defined states
//
//    - Xts Stations
//      - handshakes with extern control for mover transport
//
//  - global datafields for mrmbers in GVL_XTS namespace
//  - global interface datafields for use in members
//  - structures are assigned by reference for every member
//
//---------------------------------------------------------------------------------------------------------------
// HAUD 2024 05 29
//
//    XTS_TRANSPORT_LAYER project
//    
//    MIT License
//    
//    Copyright (c) 2024 HAUD
//    
//    Permission is hereby granted, free of charge, to any person obtaining a copy
//    of this software and associated documentation files (the "Software"), to deal
//    in the Software without restriction, including without limitation the rights
//    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//    copies of the Software, and to permit persons to whom the Software is
//    furnished to do so, subject to the following conditions:
//    
//    The above copyright notice and this permission notice shall be included in all
//    copies or substantial portions of the Software.
//    
//    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//    SOFTWARE.
//---------------------------------------------------------------------------------------------------------------
PROGRAM MAIN
VAR
	bInit 				: BOOL;
  eInit         : E_PROGRESS;

  nStation,
	nMover,
  nMoverSelected,
  nStationSelected,
  nStationParameter   : UINT;

  sStationText        : STRING(30);

  eTransportState     : E_XTS_TRANSPORT_STATE;
  eTransportResult    : E_PROGRESS;

  eXpuState           : E_XPU_STATE;
  eXpuResult          : E_PROGRESS;
  eXpuCheck           : E_XPU_CHECK;

  eMoverState         : E_MOVER_STATE;
  eMoverResult        : E_PROGRESS;

  sCaGroupState,
  sTransportState,
  sTransportCheck,
  sTransportResult,
  sXpuState,
  sXpuResult,
  sXpuCheck,
  sXpuOpMode,
  sXpuMoverdetectionMode,
  sXpuMoverAssignement,
  sMoverState,
  sMoverResult,
  sStationState,
  sStationStateMask,
  sStationCtrlMask        : STRING;

  bStationEnable,
  bStationEnter,
  bStationStart,
  bStationDone,
  bStationOut,
  bStationGone            : BOOL;

  tStationSelectedQueue   : ARRAY[1..MAX_LIST_NODES] OF ST_STATION_MOVER_DATA;

  tonWriteLog             : Tc2_Standard.TON;
  tWriteLog               : TIME := T#5S;

  nStn                    : UINT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//############################################################################
// Local time; used for timestamps
//############################################################################
GVL_MSG.fbLocalTime(
                    sLocalTime          => GVL_MSG.sLocalTime, 
                    dtLocalTime         => GVL_MSG.dtLocalTime);
//############################################################################

//############################################################################
// 	example for init sequence
//############################################################################	
IF NOT bInit
THEN
  CASE eInit
  OF
    E_PROGRESS.PROGRESS_INVALID,
    E_PROGRESS.PROGRESS_DONE:         // clear command interface
      eInit                             := E_PROGRESS.PROGRESS_BUSY;
      GVL_XTS.XpuCtrl.Cmd               := E_XPU_CTRL.XTS_CMD_NULL;
      GVL_MSG.MessageLevelXpu           := GVL_MSG.MessageLevel;
      GVL_XTS.CaGroup.MessageLevel      := GVL_MSG.MessageLevel;
      FOR nStation := 1 TO MAX_STATION
      DO
        GVL_MSG.MessageLevelStations[nStation]:= GVL_MSG.MessageLevel;
      END_FOR
      FOR nMover := 1 TO MAX_MOVER
      DO
        GVL_MSG.MessageLevelMovers[nMover]    := GVL_MSG.MessageLevel;
      END_FOR


    E_PROGRESS.PROGRESS_BUSY:         // init Xpu, ProcessingUnit, MotorModules
      eInit                             := E_PROGRESS.PROGRESS_PREPARE;
      GVL_XTS.XpuCtrl.Cmd               := E_XPU_CTRL.XTS_CMD_INIT;

    E_PROGRESS.PROGRESS_PREPARE:      // wait for init to be done
      IF (GVL_XTS.XpuState.State      = E_XPU_STATE.XTS_INIT + E_PROGRESS.PROGRESS_DONE)
      THEN
        eInit                           := E_PROGRESS.PROGRESS_STARTUP;
        GVL_XTS.XpuCtrl.Cmd             := E_XPU_CTRL.XTS_IDLE;
      END_IF

    E_PROGRESS.PROGRESS_STARTUP:      // assign mover interfaces
      eInit                             := E_PROGRESS.PROGRESS_CHECK;
      FOR nMover := 1 TO MAX_MOVER
      DO
        GVL_XTS.MoverItf[nMover]        := GVL_XTS.Mover[nMover];
      END_FOR

    E_PROGRESS.PROGRESS_CHECK:        // assign CaGroup interface
      eInit                             := E_PROGRESS.PROGRESS_OCCUPIED;
      GVL_XTS.CaGroupItf                := GVL_XTS.CaGroup;

    E_PROGRESS.PROGRESS_OCCUPIED:     // StartStation for XtsTransportCtrl.Cmd := E_XTS_TRANSPORT_CTRL.CMD_TRANSPORT_START;
      eInit                             := E_PROGRESS.PROGRESS_WORKING;
      StationParameterInit();
      // where to start?
      GVL_XTS.XtsTransport.StationStartIndex  := GVL_XTS.StationStartIndex;


    E_PROGRESS.PROGRESS_WORKING:
      // Start Position parameters
      GVL_XTS.StationStart.rPosWait     :=  20500.0; // this value may differ from the GVL_XTS.StationParameter[StartStationIndex], IF it differs, you MUST have room for positive movement to GVL_XTS.StationParameter[StartStationIndex].rWaitPos
      GVL_XTS.StationStart.rGap         :=     85.0; // may differ, or just copy from GVL_XTS.StationParameter[StartStationIndex]
      GVL_XTS.StationStart.rVelo        :=   1250.0; // may differ, or just copy from GVL_XTS.StationParameter[StartStationIndex]
      GVL_XTS.StationStart.rAccDec      :=  15000.0; // may differ, or just copy from GVL_XTS.StationParameter[StartStationIndex]
      GVL_XTS.StationStart.rJerk        := 400000.0; // may differ, or just copy from GVL_XTS.StationParameter[StartStationIndex], the movements are more robust if you keep this value in a narrow range, since jumps lead to adjusting movements within the CA Group

      IF (GVL_XTS.XtsTransport.StationStartIndex > 0) AND
         (GVL_XTS.XtsTransport.StationStartIndex < MAX_STATION+1)
      THEN
        GVL_XTS.StationStart.nConfiguredStopCount := GVL_XTS.StationParameter[GVL_XTS.XtsTransport.StationStartIndex].nConfiguredStopCount;
      END_IF

      bInit                             := TRUE;
      eInit                             := E_PROGRESS.PROGRESS_DONE;
  END_CASE
END_IF

//############################################################################
// 	XTS Transport Unit
//############################################################################
//  - main control function block for transport layer
//  - requires access to member controls
//    - Xpu
//    - CaGroup
//    - Mover
//    - Station Control
//    - Station LinkedList Interface
//############################################################################
//
// cyclic call
GVL_XTS.XtsTransport();

// main control
GVL_XTS.XtsTransport.Ctrl               REF= GVL_XTS.XtsTransportCtrl;   // main control
GVL_XTS.XtsTransport.State              REF= GVL_XTS.XtsTransportState;  // main state
                                        
// member controls                      
GVL_XTS.XtsTransport.XpuCtrl            REF= GVL_XTS.XpuCtrl;
GVL_XTS.XtsTransport.XpuState           REF= GVL_XTS.XpuState;
GVL_XTS.XtsTransport.XpuInfo            REF= GVL_XTS.XpuInfo;
                                        
GVL_XTS.XtsTransport.GroupItf           :=   GVL_XTS.CaGroupItf;
GVL_XTS.XtsTransport.GroupInfo          REF= GVL_XTS.CaGroupInfo;
                                        
GVL_XTS.XtsTransport.MoverItf           REF= GVL_XTS.MoverItf;
GVL_XTS.XtsTransport.MoverInfo          REF= GVL_XTS.MoverInfo;
GVL_XTS.XtsTransport.MoverLastPosition  REF= GVL_XTS.LastPosition;
GVL_XTS.XtsTransport.MoverLastGap       REF= GVL_XTS.LastGap;
                                        
GVL_XTS.XtsTransport.StationStart       REF= GVL_XTS.StationStart;      // start position for E_XTS_TRANSPORT_CTRL.CMD_TRANSPORT_START
GVL_XTS.XtsTransport.StationCtrlItf     REF= GVL_XTS.StationCtrlItf;    // station interfaces are required for accessing station methods
GVL_XTS.XtsTransport.StationListsItf    REF= GVL_XTS.StationListItf;    // list interface is required for access to linked list methods
GVL_XTS.XtsTransport.StationControl     REF= GVL_XTS.StationCtrl;
GVL_XTS.XtsTransport.StationState       REF= GVL_XTS.StationState;
//############################################################################



//############################################################################
// 	XTS Stations
//############################################################################	
FOR nStation := 1 TO MAX_STATION
DO
  GVL_XTS.Station[nStation].StationId   := nStation;
  GVL_XTS.Station[nStation].MessageLevel:= GVL_MSG.MessageLevelStations[nStation];

  GVL_XTS.StationListItf[nStation]      := GVL_XTS.StationList[nStation];   // interfaces for list methods
  GVL_XTS.StationCtrlItf[nStation]      := GVL_XTS.Station[nStation];       // interfaces for station methods

  GVL_XTS.Station[nStation].Ctrl        REF= GVL_XTS.StationCtrl;           // station ctrl from extern
  GVL_XTS.Station[nStation].State       REF= GVL_XTS.StationState;          // station state to extern

  GVL_XTS.Station[nStation].ItfStations REF= GVL_XTS.StationListItf;        // give every station all list interfaces for writing mover tickets
  GVL_XTS.Station[nStation].ItfMover    REF= GVL_XTS.MoverItf;              // give every station all mover interfaces for movement in / out of station
  GVL_XTS.Station[nStation].Mover       REF= GVL_XTS.AxisRefMover;          // AXIS_REF to read infos from
  GVL_XTS.Station[nStation].MoverOffset REF= GVL_XTS.PositionOffset;        // static offsets for all stations, all movers, all stop positions


  GVL_XTS.Station[nStation].StationParameter  REF= GVL_XTS.StationParameter;// give every station all station parameters for sending to WaitPos of target station

  // cyclic call
  GVL_XTS.Station[nStation].Cycle();                                        // cycle for handshaking with extern

  // Queue data for each station
  GVL_XTS.StationQueue[nStation]        := GVL_XTS.StationListItf[nStation].Data;
END_FOR
//############################################################################



//############################################################################
// 	XPU environment
//############################################################################	
GVL_XTS.Xpu.XpuInstance                 :=   1;
GVL_XTS.Xpu.MessageLevel                :=   GVL_MSG.MessageLevelXpu;

GVL_XTS.Xpu.Ctrl                        REF= GVL_XTS.XpuCtrl;
GVL_XTS.Xpu.State                       REF= GVL_XTS.XpuState;
GVL_XTS.Xpu.XpuModuleInfoData           REF= GVL_XTS.XpuModules;

GVL_XTS.Xpu.CaGroupOID                  :=   GVL_XTS.CaGroup.GroupInfo.CaGroupOID;

// cyclic call
GVL_XTS.Xpu();
GVL_XTS.XpuInfo                         :=   GVL_XTS.Xpu.XpuInfo;
//############################################################################


//############################################################################	
// 	CA-Group Class
//############################################################################	
// assignment
GVL_XTS.CaGroup.AxisRef                 REF= GVL_XTS.AxisRefMover;
// Interface to Mover methods
GVL_XTS.CaGroup.MoverItf                REF= GVL_XTS.MoverItf; 

GVL_XTS.CaGroup.GroupRef                REF= GVL_XTS.CaGroupRef;

// cyclic call
GVL_XTS.CaGroup.InfoCycle(TRUE); // read group status

// InfoData from group
GVL_XTS.CaGroupInfo                     :=   GVL_XTS.CaGroup.GroupInfo;

// Interface of CaGroup
GVL_XTS.CaGroupItf                      :=   GVL_XTS.CaGroup;
//############################################################################


//############################################################################
// Mover Class	
//############################################################################	
FOR nMover := 1 TO MAX_MOVER
DO
  GVL_XTS.Mover[nMover].MoverId         :=   nMover;
  GVL_XTS.Mover[nMover].RailLength      :=   GVL_XTS.Xpu.RailLength;  // mover needs RailLength, in order to calc absolute position from modulo input
  GVL_XTS.Mover[nMover].MessageLevel    :=   GVL_MSG.MessageLevelMovers[nMover];

  GVL_XTS.Mover[nMover].Ctrl            REF= GVL_XTS.MoverCtrl;       // mover control from extern
  GVL_XTS.Mover[nMover].State           REF= GVL_XTS.MoverState;      // mover state to extern

  GVL_XTS.Mover[nMover].MoveData        REF= GVL_XTS.MoveData;        // dyn constraints for extern to write
  GVL_XTS.Mover[nMover].GearData        REF= GVL_XTS.GearData;        // GearIn/GearInPosCa data fro extern to write

  // assignment	
  GVL_XTS.Mover[nMover].Mover           REF= GVL_XTS.AxisRefMover[nMover];  // axis reference to Mover function block
  GVL_XTS.Mover[nMover].LastGap         REF= GVL_XTS.LastGap[nMover];       // reference to last used gap value datafield
  GVL_XTS.Mover[nMover].LastPosition    REF= GVL_XTS.LastPosition[nMover];  // reference to last position datafield

  GVL_XTS.Mover[nMover].MoverInfo		    REF= GVL_XTS.MoverInfo[nMover];     // refernence to mover info data (ActPos, SetPos, ...)

  GVL_XTS.MoverItf[nMover]              :=   GVL_XTS.Mover[nMover];

  // cyclic call
  GVL_XTS.Mover[nMover].Cycle();  // call AXIS_REF()
  GVL_XTS.Mover[nMover]();        // call Ctrl/State
END_FOR


//############################################################################


//############################################################################
// /logging
//############################################################################
tonWriteLog(IN:= TRUE, PT := tWriteLog);

IF (tonWriteLog.Q)
THEN
  MessageData.bWriteFile      := TRUE;
  tonWriteLog(IN:= FALSE);
END_IF

//-----------------------------------------------------------------------------------------------------------------
// write message list to file
//-----------------------------------------------------------------------------------------------------------------
MessageData(pList			        := ADR(GVL_MSG.Messages),
			      pLocalTime        := ADR(GVL_MSG.dtLocalTime), 
			      bBusy=> );

// clear write trigger
IF MessageData.bWriteFile AND
   MessageData.bDone
THEN
  MessageData.bWriteFile      := FALSE;
END_IF
//############################################################################
// logging/
//############################################################################



//############################################################################
// Visualization data	
//############################################################################	
// get enumerations from XPU for visu:
eTransportState                         := f_GetState   (GVL_XTS.XtsTransportState.State);
eTransportResult                        := f_GetProgress(GVL_XTS.XtsTransportState.State);

eXpuState                               := f_GetState   (GVL_XTS.XpuState.State);
eXpuResult                              := f_GetProgress(GVL_XTS.XpuState.State);

eXpuCheck                               := GVL_XTS.XpuState.Check;

// display xpu state and result in visu
// get strings and info
sCaGroupState                           := TO_STRING(GVL_XTS.CaGroupInfo.CaGroupState);

sTransportState                         := TO_STRING(eTransportState);
sTransportCheck                         := TO_STRING(GVL_XTS.XtsTransportState.Check);
sTransportResult                        := TO_STRING(eTransportResult);

sXpuState                               := TO_STRING(eXpuState);
sXpuResult                              := TO_STRING(eXpuResult);
sXpuCheck                               := TO_STRING(eXpuCheck);

sXpuOpMode                              := GVL_XTS.Xpu.OpModeToString();
sXpuMoverdetectionMode                  := GVL_XTS.Xpu.IdDetectionModeToString();
sXpuMoverAssignement                    := GVL_XTS.Xpu.MoverPositionAssignementToString();

nMoverSelected                          := SEL((nMoverSelected<1), nMoverSelected, 1);
nMoverSelected                          := SEL((nMoverSelected>MAX_MOVER), nMoverSelected, MAX_MOVER);

nStationSelected                        := SEL((nStationSelected<1), nStationSelected, 1);
nStationSelected                        := SEL((nStationSelected>MAX_STATION), nStationSelected, MAX_STATION);

bStationEnable                          := SEL((GVL_XTS.StationCtrl[nStationSelected].eCmd = E_STATION_CTRL.STATION_ENABLE),        FALSE, TRUE);
bStationEnter                           := SEL((GVL_XTS.StationCtrl[nStationSelected].eCmd = E_STATION_CTRL.STATION_MOVER_ENTER),   FALSE, TRUE);
bStationStart                           := SEL((GVL_XTS.StationCtrl[nStationSelected].eCmd = E_STATION_CTRL.STATION_PROCESS_START), FALSE, TRUE);
bStationDone                            := SEL((GVL_XTS.StationCtrl[nStationSelected].eCmd = E_STATION_CTRL.STATION_PROCESS_DONE),  FALSE, TRUE);
bStationOut                             := SEL((GVL_XTS.StationCtrl[nStationSelected].eCmd = E_STATION_CTRL.STATION_MOVER_OUT),     FALSE, TRUE);
bStationGone                            := SEL((GVL_XTS.StationCtrl[nStationSelected].eCmd = E_STATION_CTRL.STATION_MOVER_GONE),    FALSE, TRUE);

eMoverState                             := f_GetState   (GVL_XTS.MoverState[nMoverSelected].State);
eMoverResult                            := f_GetProgress(GVL_XTS.MoverState[nMoverSelected].State);

sMoverState                             := TO_STRING(eMoverState);
sMoverResult                            := TO_STRING(eMoverResult);

sStationState                           := TO_STRING(GVL_XTS.StationState[nStationSelected].eState);
sStationStateMask                       := Tc2_Utilities.BYTE_TO_BINSTR(GVL_XTS.StationState[nStationSelected].nMask, 8);
sStationCtrlMask                        := Tc2_Utilities.BYTE_TO_BINSTR(GVL_XTS.StationCtrl[nStationSelected].nMask, 8);

tStationSelectedQueue                   := GVL_XTS.StationQueue[nStationSelected];

]]></ST>
    </Implementation>
    <Action Name="StationParameterInit" Id="{ab5142ae-aff4-4834-80ff-6be5268e6d80}">
      <Implementation>
        <ST><![CDATA[//-----------------------------------------------------------------------------
//
//  HAUD 2024.06.12
//
// 
//  - hard coded station parameter
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------

//-----------------------------------------------------------------------------------------------------------------------------------------
//  INFEED
    sStationText  := TO_STRING(E_INSTANCE.INFEED);//'INFEED';
//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 1;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=    1250.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=      0.0 + 176.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=    120.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3500.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  25000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 2;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=    1250.0; // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=     76.0 + 176.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=    110.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3500.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  25000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 3;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=    1250.0; // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    152.0 + 176.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=    100.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3500.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  25000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 4;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   1250.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    228.0 + 176.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=     90.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3500.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  25000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 5;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   1250.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    304.0 + 176.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=     80.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3500.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  25000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 6;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   1250.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    380.0 + 176.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=     70.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3500.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  25000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 7;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   1250.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    456.0 + 176.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=     60.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3500.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  25000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 8;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   1250.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    532.0 + 176.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=     50.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3500.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  25000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 9;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   1250.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    608.0 + 176.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=     40.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3500.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  25000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 10;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   1250.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    684.0 + 176.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=     30.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3500.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  25000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 11;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   1250.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    760.0 + 176.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=     20.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3500.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  25000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 12;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   1250.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    836.0 + 176.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=     10.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3500.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  25000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------------------------------------------------
//  OUTFEED_CLAMP (not in use in this example)
    sStationText  := 'NOT_IN_USE';
//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 13;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   3582.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=      0.0 + 161.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=    120.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3000.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 14;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   3582.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=     76.0 + 161.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=    110.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3000.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 15;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   3582.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    152.0 + 161.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=    100.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3000.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 16;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   3582.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    228.0 + 161.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=     90.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3000.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 17;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   3582.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    304.0 + 161.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=     80.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3000.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 18;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   3582.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    380.0 + 161.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=     70.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3000.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 19;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   3582.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    456.0 + 161.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=     60.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3000.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 20;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   3582.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    532.0 + 161.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=     50.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3000.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 21;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   3582.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    608.0 + 161.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=     40.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3000.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 22;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   3582.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    684.0 + 161.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=     30.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3000.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 23;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   3582.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    760.0 + 161.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=     20.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3000.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 24;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   3582.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    836.0 + 161.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=     10.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3500.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------------------------------------------------
//  BUFFER_OUTFEED_ROBOT
    sStationText  := TO_STRING(E_INSTANCE.BUFFER_OUTFEED_ROBOT);//'BUFFER_OUTFEED_ROBOT';
//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 25;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   3000.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=      0.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=     -5.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3500.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  25000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------------------------------------------------
//  OUTFEED_ROBOT_R1
    sStationText  := TO_STRING(E_INSTANCE.OUTFEED_ROBOT_R1);//'OUTFEED_ROBOT_R1';
//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 26;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   7000.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=      0.0 + 160.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=    240.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3000.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 27;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   7000.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=     80.0 + 160.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=    230.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3000.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 28;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   7000.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    160.0 + 160.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=    220.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3000.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 29;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   7000.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    240.0 + 160.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=    210.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3000.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 30;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   7000.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    320.0 + 160.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=    200.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3000.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 31;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   7000.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    400.0 + 160.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=    190.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3000.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 32;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   7000.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    480.0 + 160.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=    180.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3000.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 33;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   7000.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    560.0 + 160.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=    170.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3000.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 34;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   7000.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    640.0 + 160.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=    160.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3000.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 35;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   7000.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    720.0 + 160.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=    150.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3000.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 36;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   7000.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    800.0 + 160.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=    140.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3000.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 37;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   7000.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    880.0 + 160.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=    130.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3000.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------------------------------------------------
//  OUTFEED_ROBOT_R2
    sStationText  := TO_STRING(E_INSTANCE.OUTFEED_ROBOT_R2);//'OUTFEED_ROBOT_R2';
//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 38;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   7000.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=      0.0 + 1120.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=    120.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3000.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 39;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   7000.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=     80.0 + 1120.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=    110.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3000.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 40;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   7000.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    160.0 + 1120.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=    100.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3000.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 41;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   7000.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    240.0 + 1120.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=     90.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3000.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 42;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   7000.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    320.0 + 1120.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=     80.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3000.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 43;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   7000.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    400.0 + 1120.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=     70.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3000.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 44;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   7000.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    480.0 + 1120.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=     60.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3000.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 45;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   7000.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    560.0 + 1120.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=     50.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3000.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 46;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   7000.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    640.0 + 1120.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=     40.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3000.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 47;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   7000.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    720.0 + 1120.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=     30.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3000.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 48;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   7000.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    800.0 + 1120.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=     20.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3000.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 49;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=   7000.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=    880.0 + 1120.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=     10.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   1500.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  25000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;


//-----------------------------------------------------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------------------------------------------------
//  SENDER_SLOW is notin use in this example
    sStationText  := 'NOT_IN_USE';
//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 50;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=  10000.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=      0.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=     10.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   1500.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  25000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------------------------------------------------
// SENDER_FAST
    sStationText  := TO_STRING(E_INSTANCE.SENDER_FAST);//'SENDER_FAST';
//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 51;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=  12000.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=      0.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=    -10.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   3500.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  25000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------------------------------------------------
//  SENDER_BUFFER_INFEED
    sStationText  := TO_STRING(E_INSTANCE.SENDER_BUFFER_INFEED);//'SENDER_BUFFER_INFEED';
//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 52;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=  20500.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=      0.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=     25.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=     76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   1500.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  20000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

//-----------------------------------------------------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------------------------------------------------
//  BUFFER_INFEED
    sStationText  := TO_STRING(E_INSTANCE.BUFFER_INFEED);//'BUFFER_INFEED';
//-----------------------------------------------------------------------------------------------------------------------------------------
nStationParameter := 53;
GVL_XTS.StationParameter[nStationParameter].sText                 := sStationText;
GVL_XTS.StationParameter[nStationParameter].rPosWait              :=    1200.0;  // absolute modulo position

GVL_XTS.StationParameter[nStationParameter].nConfiguredStopCount  :=      1;   // how many stops the mover has to make in this station
GVL_XTS.StationParameter[nStationParameter].rPosStop[1]           :=      0.0; // relative to rPosWait

GVL_XTS.StationParameter[nStationParameter].rReleaseDistance      :=    -10.0; // relative to Mover.ActPos

GVL_XTS.StationParameter[nStationParameter].rGap                  :=    76.0;
GVL_XTS.StationParameter[nStationParameter].rVelo                 :=   1750.0;
GVL_XTS.StationParameter[nStationParameter].rAccDec               :=  10000.0;
GVL_XTS.StationParameter[nStationParameter].rJerk                 := 800000.0;

]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="MAIN">
      <LineId Id="3076" Count="54" />
      <LineId Id="3590" Count="0" />
      <LineId Id="3131" Count="51" />
      <LineId Id="3483" Count="1" />
      <LineId Id="3183" Count="3" />
      <LineId Id="3591" Count="1" />
      <LineId Id="3187" Count="190" />
      <LineId Id="491" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.StationParameterInit">
      <LineId Id="2233" Count="839" />
      <LineId Id="27" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>