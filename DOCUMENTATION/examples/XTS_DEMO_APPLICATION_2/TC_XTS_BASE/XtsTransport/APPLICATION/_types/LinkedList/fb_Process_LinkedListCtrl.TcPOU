<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4026.11">
  <POU Name="fb_Process_LinkedListCtrl" Id="{d481acc0-8bbd-42d4-bc58-58db20d0c7e4}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK fb_Process_LinkedListCtrl IMPLEMENTS I_Process_LinkedList
VAR
  _LastNodeAdded,
  _LastNodeRemoved  : ST_PROCESS_LIST_RESULT;

	_nCount           : UDINT;
  _nFree            : UDINT;

  {attribute 'hide'}
	_stList           : ARRAY[0..MAX_LIST_NODES] OF ST_PROCESS_DATA;
	_stNodes          : ARRAY[0..MAX_LIST_NODES] OF T_LinkedListEntry;

	_fbList           : Tc2_Utilities.FB_LinkedListCtrl;
	_hList            : Tc2_Utilities.T_HLINKEDLIST;

	_stRef            : POINTER TO ST_PROCESS_DATA;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="AddHeadValue" Id="{cb088eeb-ebce-4b55-9535-78faa263e675}">
      <Declaration><![CDATA[METHOD AddHeadValue : ST_PROCESS_LIST_RESULT
VAR_INPUT
  stData        : ST_PROCESS_DATA;
END_VAR
VAR
  _nIdxNode     : ULINT; 
	_pPosGet      : POINTER TO T_LinkedListEntry;
  _stRes        : ST_PROCESS_LIST_RESULT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
// add empty node
_fbList.A_AddHeadValue( hList     := _hList, 
                        putValue  := 16#0, 
                        getPosPtr => _pPosGet);

IF NOT _fbList.bOk 
THEN
  _stRes.wState.0       := TRUE;
ELSE
  // Get array index of new node
	_fbList.A_GetIndexAtPosPtr( hList       := _hList, 
                              putPosPtr   := _pPosGet, 
                              getValue    => _nIdxNode);

	IF NOT _fbList.bOk 
  THEN
    _stRes.wState.1     := TRUE;
  ELSE
    // write data to new node index
		_stRef 	            := ADR( _stList[_nIdxNode] );
		_stRef^ 	          := stData;

		_fbList.A_SetValueAtPosPtr( hList     := _hList, 
                                putPosPtr := _pPosGet, 
                                putValue  := _stRef);

		IF NOT _fbList.bOk 
    THEN
      _stRes.wState.2   := TRUE;
    ELSE
      _stRes.nIndex     := _nIdxNode;
			_stRes.stData     := stData;
      _LastNodeAdded    := _stRes;
		END_IF
	END_IF
END_IF
_nCount       := _hList.nCount;
_nFree        := _hList.nFree;
AddHeadValue  := _stRes;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddTailValue" Id="{4b36eae4-75f4-4e48-886d-a9b9d29a7cba}">
      <Declaration><![CDATA[METHOD AddTailValue : ST_PROCESS_LIST_RESULT
VAR_INPUT
  stData        : ST_PROCESS_DATA;
END_VAR
VAR
  _nIdxNode     : ULINT; 
	_pPosGet      : POINTER TO T_LinkedListEntry;
  _stRes        : ST_PROCESS_LIST_RESULT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
// add empty node
_fbList.A_AddTailValue( hList       := _hList, 
                        putValue    := 16#0, 
                        getPosPtr   => _pPosGet);


IF NOT _fbList.bOk 
THEN
  _stRes.wState.0 := TRUE;
ELSE
  // Get array index of new node
	_fbList.A_GetIndexAtPosPtr( hList       := _hList, 
                              putPosPtr   := _pPosGet, 
                              getValue    => _nIdxNode);

	IF NOT _fbList.bOk 
  THEN
    _stRes.wState.1     := TRUE;
  ELSE
    // write data to new node index
		_stRef 	            := ADR( _stList[_nIdxNode] );
		_stRef^ 	          := stData;

		_fbList.A_SetValueAtPosPtr( hList     := _hList, 
                                putPosPtr := _pPosGet, 
                                putValue  := _stRef);

		IF NOT _fbList.bOk 
    THEN
      _stRes.wState.2   := TRUE;
    ELSE
      _stRes.nIndex     := _nIdxNode;
			_stRes.stData     := stData;
      _LastNodeAdded    := _stRes;
		END_IF
	END_IF
END_IF
_nCount       := _hList.nCount;
_nFree        := _hList.nFree;
AddTailValue  := _stRes;
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Count" Id="{8ce88ace-6381-4814-9e6c-78dcc915ba31}">
      <Declaration><![CDATA[PROPERTY Count : UDINT]]></Declaration>
      <Get Name="Get" Id="{05a72a22-76f7-4cce-8891-436b9915e4a6}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Count := _nCount := _hList.nCount;
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Data" Id="{04469e6f-0b47-4af8-9a80-285cec8de7dd}">
      <Declaration><![CDATA[PROPERTY Data : ARRAY[1..MAX_LIST_NODES] OF ST_PROCESS_DATA]]></Declaration>
      <Get Name="Get" Id="{ac84b142-7e05-4c51-b3b9-9ecb2eb2fd21}">
        <Declaration><![CDATA[VAR
	_tList        : ARRAY[1..MAX_LIST_NODES] OF ST_PROCESS_DATA;
  _getValue     : PVOID;
  _pEntry       : POINTER TO ST_PROCESS_DATA;
  _getPosPtr    : POINTER TO T_LinkedListEntry := 0;
  _nIdx         : UINT;  
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_fbList(
	hList       := _hList);

_nCount       := _hList.nCount;
_nFree        := _hList.nFree;


_fbList.A_GetHead( hList := _hList, getValue=> _getValue, getPosPtr=> _getPosPtr );
IF _fbList.bOk 
THEN
  IF (_hList.nCount > 0)
  THEN
    _nIdx         := 1;
    _pEntry       := _getValue;
    _tList[1]     := _pEntry^;
    
    REPEAT
      _fbList.A_GetNext( hList := _hList, putPosPtr := _getPosPtr, getValue=> _getValue, getPosPtr=> _getPosPtr );
  
      IF _fbList.bOk THEN
        _nIdx         := _nIdx + 1;
        _pEntry       := _getValue;
        _tList[_nIdx] := _pEntry^;
      ELSE
        EXIT;
      END_IF
    UNTIL NOT _fbList.bOk
    END_REPEAT
  END_IF
END_IF

Data := _tList;
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Free" Id="{7fcb031f-f413-4391-8997-07e7dea8e9db}">
      <Declaration><![CDATA[PROPERTY Free : UDINT]]></Declaration>
      <Get Name="Get" Id="{d5a9f1ac-fb1b-4722-86a0-58426ae277ea}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Free := _nFree := _hList.nFree;
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="GetHead" Id="{8b3b30bf-f6ca-46d8-98f5-aa9e88db4597}">
      <Declaration><![CDATA[METHOD GetHead : ST_PROCESS_LIST_RESULT
VAR_INPUT
END_VAR
VAR
	_pPosGet      : POINTER TO T_LinkedListEntry;
  _pData        : POINTER TO ST_PROCESS_DATA;
  _stRes        : ST_PROCESS_LIST_RESULT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
_fbList.A_GetHead(hList      := _hList,
                  getValue   => _pData,
                  getPosPtr  => _pPosGet);

IF NOT _fbList.bOk
THEN
  _stRes.wState.0 := TRUE;
ELSE
  _stRes.stData := _pData^;
END_IF
_nCount       := _hList.nCount;
_nFree        := _hList.nFree;
GetHead       := _stRes;

]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetTail" Id="{ee04005f-daf4-444d-a863-b6c4aa3ebce0}">
      <Declaration><![CDATA[METHOD GetTail : ST_PROCESS_LIST_RESULT
VAR_INPUT
END_VAR
VAR
	_pPosGet      : POINTER TO T_LinkedListEntry;
  _pData        : POINTER TO ST_PROCESS_DATA;
  _stRes        : ST_PROCESS_LIST_RESULT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
_fbList.A_GetTail(hList      := _hList,
                  getValue   => _pData,
                  getPosPtr  => _pPosGet);

IF NOT _fbList.bOk
THEN
  _stRes.wState.0 := TRUE;
ELSE
  _stRes.stData := _pData^;
END_IF
_nCount       := _hList.nCount;
_nFree        := _hList.nFree;
GetTail       := _stRes;

]]></ST>
      </Implementation>
    </Method>
    <Method Name="InitList" Id="{d197dbd8-b906-4214-bb4b-a515f9ab5a7d}">
      <Declaration><![CDATA[METHOD InitList : BOOL
VAR_INST
  _bOk        : BOOL;
  _bListinit  : BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
_bListInit  := Tc2_Utilities.F_CreateLinkedListHnd(ADR(_stNodes), SIZEOF(_stNodes), _hList);

IF _bListInit
THEN
  _fbList.A_Reset(hList := _hList, bOk => _bOk);
  memset(ADR(_stList), 0, SIZEOF(_stList));
  _nCount   := _hList.nCount;
  _nFree    := _hList.nFree;
  InitList  := TRUE; //_bOk;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Nodes" Id="{88cd6309-4ace-45b9-9128-9513c4912c72}">
      <Declaration><![CDATA[PROPERTY Nodes : ARRAY[0..MAX_LIST_NODES] OF T_LinkedListEntry]]></Declaration>
      <Get Name="Get" Id="{09ab2d93-99d0-4583-9280-54d1d4d4964d}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Nodes := _stNodes;
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="RemoveHeadValue" Id="{0edf66db-7029-4462-af17-168d20a4430a}">
      <Declaration><![CDATA[METHOD RemoveHeadValue : ST_PROCESS_LIST_RESULT
VAR_INPUT
END_VAR
VAR
	_pPosGet      : POINTER TO T_LinkedListEntry;
  _pData        : POINTER TO ST_PROCESS_DATA;
  _stRes        : ST_PROCESS_LIST_RESULT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_fbList.A_RemoveHeadValue(hList       := _hList, 
                          getValue    => _pData, 
                          getPosPtr   => _pPosGet);

IF NOT _fbList.bOk 
THEN
  _stRes.wState.0 := TRUE;
ELSE
	_stRes.stData     := _pData^;
  _LastNodeRemoved  := _stRes;
  memset(_pData, 0, SIZEOF(ST_PROCESS_DATA));
END_IF
_nCount           := _hList.nCount;
_nFree            := _hList.nFree;
RemoveHeadValue   := _stRes;
]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="fb_Process_LinkedListCtrl">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="fb_Process_LinkedListCtrl.AddHeadValue">
      <LineId Id="32" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="28" Count="1" />
      <LineId Id="31" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="33" Count="2" />
      <LineId Id="42" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="38" Count="1" />
      <LineId Id="57" Count="0" />
      <LineId Id="16" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="45" Count="0" />
      <LineId Id="44" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="17" Count="3" />
      <LineId Id="47" Count="1" />
      <LineId Id="50" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="51" Count="0" />
      <LineId Id="53" Count="0" />
      <LineId Id="52" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="23" Count="2" />
      <LineId Id="36" Count="0" />
      <LineId Id="67" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="fb_Process_LinkedListCtrl.AddTailValue">
      <LineId Id="29" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="30" Count="2" />
      <LineId Id="28" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="46" Count="25" />
      <LineId Id="25" Count="0" />
      <LineId Id="80" Count="0" />
      <LineId Id="43" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="fb_Process_LinkedListCtrl.Count.Get">
      <LineId Id="2" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="fb_Process_LinkedListCtrl.Data.Get">
      <LineId Id="38" Count="31" />
      <LineId Id="30" Count="0" />
    </LineIds>
    <LineIds Name="fb_Process_LinkedListCtrl.Free.Get">
      <LineId Id="2" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="fb_Process_LinkedListCtrl.GetHead">
      <LineId Id="12" Count="2" />
      <LineId Id="16" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="19" Count="2" />
      <LineId Id="23" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="41" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="fb_Process_LinkedListCtrl.GetTail">
      <LineId Id="12" Count="2" />
      <LineId Id="16" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="19" Count="2" />
      <LineId Id="23" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="41" Count="1" />
      <LineId Id="31" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="fb_Process_LinkedListCtrl.InitList">
      <LineId Id="28" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="6" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="8" Count="1" />
      <LineId Id="19" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="fb_Process_LinkedListCtrl.Nodes.Get">
      <LineId Id="2" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="fb_Process_LinkedListCtrl.RemoveHeadValue">
      <LineId Id="39" Count="11" />
      <LineId Id="61" Count="1" />
      <LineId Id="51" Count="0" />
      <LineId Id="30" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>